// all values will be initialized with 1
var x,y,z = 1 

// multi value initialization
var x = 1 ; y = 2 ; z = 3

// multi value initialization, with sugar
var (x,y,z) = (1,2,3)

// tuple value is given to every variable
var x,y,z = (1,2,3)

// List - immutable
var xi = List(1,2,3)
var xs = List("one", "two", "three")
var xd = List(1.2, 2.3, 3.4)

// List - value index
xi(2)

// Alias - even for Types
type R = Double

// stores a double
var a:R = 1.2

// range, immutable-range
(1 to 5)
(1 untill 6)

// underscore magic, anonymous function, underscore is positionally matched argument
// below code multiplies every value in the range with 2, underscore tells every value
// results in a immutable vector
(1 to 5).map(_*2)

// similar underscore magic, a reduce function always aggregates, you just need to pass the logic of aggreagation
// it simple adds all the values in the range, 1 + 2 + 3 + 4 + 5 = 15, returns a scalar value
// only name has LEFT keyword, calculation happens from left to right, that is normal only
(1 to 5).reduceLeft(_+_)

// if the list is string, it concatenates
var a = List("one", "two", "three")
a.reduceLeft(_+_)

// block style anonymous function; to use other variables than the previous ones
// for every value of 'x' the function performs its transformation
// below code does the job and returns the value
(1 to 5).map{x => val y = 2*x; println(y); y}

// anonymous functions, pipeline style
// instead of dots we use spaces, like using pipes in unix
// one parameter is expected with one undescore, order of params work
// 1 + 2 style; instead of 1.+(2) style; "1" is object and "+" is function
(1 to 5) map {_*2}
(1 to 5) map {2*_}

// object style
1.+(2)
1.+(2).+(3).+(4).+(5)
1.+(2).-(3).+(1).*(5)

// void, empty parens
()

// filter, used to filter
// underscore means, placeholder for argument, argument is the input from previous
// logic need to return BOOLEAN
xs.filter(_%2 == 0)

// logic need to retrive even value, pipline style
xs.filter(_%2 == 0) map { _+ }


Scala Fun:
---------

1. println vs even more
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> println("hello")                                                                                                                                                         
hello                                                                                                                                                                           
                                                                                                                                                                                
scala> println( {"hello"} )                                                                                                                                                     
hello                                                                                                                                                                           
                                                                                                                                                                                
scala> println( { { "hello" } } )                                                                                                                                               
hello                                                                                                                                                                           

scala> println( { var i = 0; for( e <- 1 to 20) i+=e; {i} } )                                                                                                                   
210                                                                                                                                                                             
                                                                                                                                                                                
scala> 20*21/2                                                                                                                                                                  
res4: Int = 210     

scala> println( { var i = 10; i = 11 } )                                                                                                                                        
()                                                                                                                                                                              
                                                                                                                                                            
scala> println()                                                                                                                                                                
                                                                                                                                                                                
scala> println(  )                                                                                                                                                              
                                                                                                                                                                                
scala> { println() }                                                                                                                                                            
                                                                                                                                                                                
// Note: println is just another normal function
// Note: it can be more in scala, you can use code blocks in it, they must return a value
// Note: if its not returning a value, it is considered as void and nothing is printed, no compile or runtime error
// Note: last 3 are executing and returning nothing
-----------------------------------------------------------------------------------------

2. map function vs even more
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> var a = List(1,2)                                                                                                                                                        
a: List[Int] = List(1, 2)                                                                                                                                                       
                                                                                                                                                                                
scala> a.map( e => e + 1)                                                                                                                                                       
res10: List[Int] = List(2, 3)                                                                                                                                                   
                                                                                                                                                                                
scala> a.map( { var i = 10; e => e + i } )                                                                                                                                      
res11: List[Int] = List(11, 12)                                                                                                                                                 

scala> var a = 10                                                                                                                                                               
a: Int = 10                                                                                                                                                                     
                                                                                                                                                                                
scala> a.map( e => e + 1)                                                                                                                                                       
<console>:12: error: value map is not a member of Int                                                                                                                           
       a.map( e => e + 1)                                                                                                                                                       
         ^                                                                                                                                                                      

scala> a.map(1)                                                                                                                                                                 
<console>:12: error: type mismatch;                                                                                                                                             
 found   : Int(1)                                                                                                                                                               
 required: Int => ?                                                                                                                                                             
       a.map(1)                                                                                                                                                                 
             ^                                                                                                                                                                  
scala> a.map( i => i)                                                                                                                                                           
res13: List[Int] = List(1, 2)                                                                                                                                                   

// Note: map() function is just like another function to work with
// Note: like println(), map() also allows us to put code blocks inside it
// Note: map() or reduce() functions work on collections, so only collection objects have these functions
// Note: like println(), which expects a return value to be used as input param, map() expects a function to be a parameter
// Note: a function as a parameter is represented by rocket("=>")




-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
