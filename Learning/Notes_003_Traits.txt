Scala Fun:
----------

1. Demo.scala code file
=	$ scala Demo.scala  -- some time works without compilation
	$ scalac Demo.scala -- some times it doest work without compilation
	
	What is the matter? Where is the hidden understanding?
Ans:
	a. If class is there then we need to compile
	b. If class is not there then it considered as scala script file and it works
	
2. When scalac need to be used? When compilation needed in scala?
=
Ans: if classes are there in the code

3. Where main method need to be used?
=
Ans: inside object (singleton class)

4. Does the scala code compiles without main method?
=
Ans: Yes, it compiles but gives error at runtime as main method not found.
		the below code is example
-----------------------------------------------------------------------------------------class DemoClass {
    var x: Int = 10
    var y: Int = 20
    
    def iPrint() { println("The values of x and y are "+x+" and "+y+" respectively.") }
}

object DemoObject {
    var c = new DemoClass();
    c.iPrint
}		
-----------------------------------------------------------------------------------------		
		
		
5. What are the rules of filename to classname to objectname? do they need to be same.
=
Ans: as of now, dont know the answer really
		But filename and objectname can vary, and it works without errors
		the below code is example
-----------------------------------------------------------------------------------------HelloWorld.scala
object HelloJagadish {
   def main(args: Array[String]) {
      println("Hello, Jagadish!")
   }
}
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scala HelloWorld.scala                                                                                                                                                  
Hello, Jagadish!                                                                                                                                                                
sh-4.3$ scalac HelloWorld.scala                                                                                                                                                 
sh-4.3$ scala HelloWorld                                                                                                                                                        
Hello, world!		
-----------------------------------------------------------------------------------------		
		
6. When you have object and class in the same code, make sure the filename is also same.
=
Ans: 
-----------------------------------------------------------------------------------------DemoClass.scala
class DemoClass {
    var x: Int = 10
    var y: Int = 20
    
    def iPrint() { println("The values of x and y are "+x+" and "+y+" respectively.") }
}

object DemoClass {
    var c = new DemoClass();
    def main(args: Array[String]) {c.iPrint}
}
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scalac DemoClass.scala                                                                                                                                                  
sh-4.3$ scala DemoClass                                                                                                                                                         
The values of x and y are 10 and 20 respectively.
-----------------------------------------------------------------------------------------

7. Naming rules for objectname and filename?
=
Ans: when using class and object together in the file, objectname need to be exactly same to filename, (classname can be different)
-----------------------------------------------------------------------------------------DemoClass.scala
class DemoFun {
    var x: Int = 10
    var y: Int = 20
    
    def iPrint() { println("The values of x and y are "+x+" and "+y+" respectively.") }
}

object DemoClass {
    var c = new DemoFun();
    def main(args: Array[String]) {c.iPrint}
}
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scalac DemoClass.scala                                                                                                                                                         
sh-4.3$ scala DemoClass                                                                                                                                                         
The values of x and y are 10 and 20 respectively.
-----------------------------------------------------------------------------------------

8. Scala runtime system expects a main method in code. the below code fails with comments at main methond line.
=
-----------------------------------------------------------------------------------------DemoClass.scala
class DemoFun {
    var x: Int = 10
    var y: Int = 20
    
    def iPrint() { println("The values of x and y are "+x+" and "+y+" respectively.") }
}

object DemoClass {
    var c = new DemoFun();
    c.iPrint
    //def main(args: Array[String]) {c.iPrint}
}
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scalac DemoClass.scala                                                                                                                                                  
sh-4.3$ scala DemoClass                                                                                                                                                         
java.lang.NoSuchMethodException: DemoClass.main([Ljava.lang.String;)                                                                                                            
        at java.lang.Class.getMethod(Class.java:1786)                                                                                                                           
        at scala.reflect.internal.util.ScalaClassLoader$class.run(ScalaClassLoader.scala:94)                                                                                    
        at scala.reflect.internal.util.ScalaClassLoader$URLClassLoader.run(ScalaClassLoader.scala:129)                                                                          
        at scala.tools.nsc.CommonRunner$class.run(ObjectRunner.scala:22)                                                                                                        
        at scala.tools.nsc.ObjectRunner$.run(ObjectRunner.scala:39)                                                                                                             
        at scala.tools.nsc.CommonRunner$class.runAndCatch(ObjectRunner.scala:29)                                                                                                
        at scala.tools.nsc.ObjectRunner$.runAndCatch(ObjectRunner.scala:39)                                                                                                     
        at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:65)                                                                                            
        at scala.tools.nsc.MainGenericRunner.run$1(MainGenericRunner.scala:87)                                                                                                  
        at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:98)                                                                                                
        at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:103)                                                                                                 
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)                                                                                                      
-----------------------------------------------------------------------------------------DemoClass.scala
class DemoFun {
    var x: Int = 10
    var y: Int = 20
    
    def iPrint() { println("The values of x and y are "+x+" and "+y+" respectively.") }
}

object DemoClass {
    var c = new DemoFun();
    c.iPrint
    def main(args: Array[String]) {c.iPrint}
}
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scalac DemoClass.scala                                                                                                                                                  
sh-4.3$ scala DemoClass                                                                                                                                                         
The values of x and y are 10 and 20 respectively.                                                                                                                               
The values of x and y are 10 and 20 respectively.                                                                                                                               
-----------------------------------------------------------------------------------------

9. Evaluation of expression in scala code
=
Ans: Any where inside class/object definition it can be evaluated (oops)
		any where in the script (functional)

10. How many point of views are there in scala? So that things will vary?
=
Ans:
	interactive mode => like and interpreter but internally compiler
	script mode => write the scala commands in a file with .scala extention
	batch mode => classes and objects are defined in .scala file
					=> Object Oriented Model of coding
					=> Functional Model of coding

11. How class with constructors are evalutated?
=
Ans: we can directly declare the class with constructor, like the below code:
		main method doesnt do anything here, its only there to avoid error
-----------------------------------------------------------------------------------------DemoClass.scala
class DemoFun(a:Int, b:Int) {
    var x: Int = a
    var y: Int = b
    
    def iPrint() { println("The values of x and y are "+x+" and "+y+" respectively.") }
}

object DemoClass {
    var c = new DemoFun(10,20);
    var d = new DemoFun(12,24);
    c.iPrint
    d.iPrint
    def main(args: Array[String]) {}
}
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scalac DemoClass.scala                                                                                                                                                  
sh-4.3$ scala DemoClass                                                                                                                                                         
The values of x and y are 10 and 20 respectively.                                                                                                                               
The values of x and y are 12 and 24 respectively.     
-----------------------------------------------------------------------------------------
12. Traits Example
=

-----------------------------------------------------------------------------------------
trait Equal {
   def isEqual(x: Any): Boolean
   def isNotEqual(x: Any): Boolean = !isEqual(x)
}

class Point(xc: Int, yc: Int) extends Equal {
   var x: Int = xc
   var y: Int = yc
   
   def isEqual(obj: Any) = obj.isInstanceOf[Point] && obj.asInstanceOf[Point].x == y
}

object Demo {
   def main(args: Array[String]) {
      val p1 = new Point(2, 3)
      val p2 = new Point(2, 4)
      val p3 = new Point(3, 3)

      println(p1.isNotEqual(p2))
      println(p1.isNotEqual(p3))
      println(p1.isNotEqual(2))
      println(p1.isNotEqual(3))
   }
}
-----------------------------------------------------------------------------------------


13. Traits with Mixin Example
=
-----------------------------------------------------------------------------------------
Mixin Example -> Multiple Inheritence

Object Mixin {
	def main(a: Array[String]) = {
		val gQuota = new GeneralQuota
		gQuota.printQuotaDetail
		val tQuota = new TatkalQuota
		tQuota.printQuotaDetail
		println("Is it Special train: "+tQuota.isSpecialTrain)
		val lQuota = new LadiesQuota
		lQuota.printQuotaDetail
		println("Is it Special train: "+lQuota.isSpecialTrain)
		lQuota.printTrainInfo
	}
	
	// Abstract Class
	abstract class AbsInfo {
		def isSpecialTrain: Boolean
	}
	
	// Trait Object
	trait MyTrain{
		def printTrainInfo = {
			println("Train Number : 12675")
			println("Train Name : KOVAI EXPRESS")
		}
	}
	
	// Normal Class
	class GeneralQuota {
		def printQuotaDetail = println("General Quota")
	}
	
	// Abstract class with interface method implementation
	class TatkalQuota extends AbsInfo {
		def printQuotaDetail = println("Tatkal Quota")
		def isSpecialTrain:Boolean = false
	}
	
	// Mixin class composition
	class LadiesQuota extends AbsInfo with MyTrain {
		def printQuotaDetail = println("Ladies Quota")
		def isSpecialTrain:Boolean = false
	}
}
-----------------------------------------------------------------------------------------
sh-4.3$ scalac Mixin.scala                                                                                                                                                      
sh-4.3$ scala Mixin                                                                                                                                                             
General Quota                                                                                                                                                                   
Tatkal Quota                                                                                                                                                                    
Is it Special train: false                                                                                                                                                      
Ladies Quota                                                                                                                                                                    
Is it Special train: false                                                                                                                                                      
Train Number : 12675                                                                                                                                                            
Train Name : KOVAI EXPRESS                                                                                                                                                      
-----------------------------------------------------------------------------------------

=========================================================================================SOME MORE SCALA MAGIC
*****Object Oriented*****
=========================================================================================SOME MORE SCALA MAGIC
1. Create a simple class
=
-----------------------------------------------------------------------------------------Demo.scala
class User(n: String) {
    val name: String = n
}

var u = new User(n = "Frank")
-----------------------------------------------------------------------------------------SCALA CONSOLE

-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scala Demo.scala                                                                                                                                                        
sh-4.3$ scalac Demo.scala                                                                                                                                                       
Demo.scala:5: error: expected class or object definition                                                                                                                        
var u = new User(n = "Frank")                                                                                                                                                   
^                                                                                                                                                                               
one error found
// Note: Class Name and File Name are not the same                                                                                                                                                                
-----------------------------------------------------------------------------------------
2. Scala Console Vs Scala Script File
=
-----------------------------------------------------------------------------------------Demo.scala
class User(n: String) {
    val name: String = n
}

var u = new User(n = "Frank")

u

u.name
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scala Demo.scala                                                                                                                                                        
/home/cg/root/Demo.scala:7: warning: a pure expression does nothing in statement position; you may be omitting necessary parentheses                                            
u                                                                                                                                                                               
^                                                                                                                                                                               
one warning found                                                                                                                                                               
-----------------------------------------------------------------------------------------Demo.scala
class User(n: String) {
    val name: String = n
}

var u = new User(n = "Frank")

u

u.name

println(u)

println(u.name)
-----------------------------------------------------------------------------------------CONSOLE
sh-4.3$ scala Demo.scala                                                                                                                                                        
/home/cg/root/Demo.scala:7: warning: a pure expression does nothing in statement position; you may be omitting necessary parentheses                                            
u                                                                                                                                                                               
^                                                                                                                                                                               
one warning found                                                                                                                                                               
Main$$anon$1$User@7a46a697                                                                                                                                                      
Frank                                                                                                                                                                           
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> var u = new User(n = "Frank")                                                                                                                                            
u: User = User@3bcbb589                                                                                                                                                         
                                                                                                                                                                                
scala> u                                                                                                                                                                        
res1: User = User@3bcbb589                                                                                                                                                      
                                                                                                                                                                                
scala> u.name                                                                                                                                                                   
res2: String = Frank                                                                                                                                                            
                                                                                                                                                                                
scala> var u1 = new User("Mark")                                                                                                                                                
u1: User = User@74ad8d05                                                                                                                                                        
                                                                                                                                                                                
scala> u1.name                                                                                                                                                                  
res3: String = Mark                                                                                                                                                             

scala> println(u)                                                                                                                                                               
$line4.$read$$iw$$iw$User@3bcbb589                                                                                                                                              
                                                                                                                                                                                
scala> println(u.name)                                                                                                                                                          
Frank                                                                                                                                                                           

scala> u.name                                                                                                                                                                   
res6: String = Frank                                                                                                                                                            
                                                                                                                                                                                
scala> u.name = "Hello"                                                                                                                                                         
<console>:12: error: reassignment to val                                                                                                                                        
       u.name = "Hello"                                                                                                                                                         
              ^                                                                                                                                                                 
// Note: Scala shell always returns a value. Nothing is left.
// Note: Constructor Syntax, With Named Parameters and Normal Parameters
// Note: Default type is VAL for the arguments, so you cannot change them
-----------------------------------------------------------------------------------------
3. Scala classes and constructors, Consice string operations
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> class Cat(val name: String) {                                                                                                                                            
     |  def greet: String = {                                                                                                                                                   
     |          s"My name is $name"                                                                                                                                             
     | }                                                                                                                                                                        
     | }                                                                                                                                                                        
defined class Cat                                                                                                                                                               
                                                                                                                                                                                
scala> var myCat = new Cat(name = "Garfield")                                                                                                                                   
myCat: Cat = Cat@1e01b133                                                                                                                                                       
                                                                                                                                                                                
scala> var yourCat = new Cat("Tom")                                                                                                                                             
yourCat: Cat = Cat@3b4086c1                                                                                                                                                     
                                                                                                                                                                                
scala> var stuartCat = new Cat                                                                                                                                                  
<console>:11: error: not enough arguments for constructor Cat: (name: String)Cat.                                                                                               
Unspecified value parameter name.                                                                                                                                               
       var stuartCat = new Cat                                                                                                                                                  
                       ^                                                                                                                                                        
scala> println {                                                                                                                                                                
     |  myCat.greet                                                                                                                                                             
     | }                                                                                                                                                                        
My name is Garfield                                                                                                                                                             
                                                                                                                                                                                
scala> println(yourCat.greet)                                                                                                                                                   
My name is Tom                                                                                                                                                                  

// Note: Different ways of passing params to constructor, with name or without name
// Note: Different ways of using the println function, with {} or ()
// Note: Concise way of string expression, with $param-name
-----------------------------------------------------------------------------------------
4. Scala concise vs normal string expression
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> class Cat                                                                                                                                                                
defined class Cat                                                                                                                                                               
                                                                                                                                                                                
scala> class                                                                                                                                                                    
     | Cat(val name: String) {                                                                                                                                                  
     |  def greet: String = s"My name is $name"                                                                                                                                 
     |  def wish: String = "I love to be with myself a.k.a " + name                                                                                                             
     |  def hello { println("Anybody said, Hello!") }                                                                                                                           
     | }                                                                                                                                                                        
defined class Cat                                                                                                                                                               

scala> var c1 = new Cat("Tommy")                                                                                                                                                
c1: Cat = Cat@76b305e1                                                                                                                                                          
                                                                                                                                                                                
scala> var c2 = new Cat("Lucy")                                                                                                                                                 
c2: Cat = Cat@2fa212df                                                                                                                                                          
                                                                                                                                                                                
scala> c1.greet                                                                                                                                                                 
res9: String = My name is Tommy                                                                                                                                                 
                                                                                                                                                                                
scala> c1.wish                                                                                                                                                                  
res10: String = I love to be with myself a.k.a Tommy                                                                                                                            
                                                                                                                                                                                
scala> c1.hello                                                                                                                                                                 
Anybody said, Hello!                                                                                                                                                            

scala> print(c1.wish)                                                                                                                                                           
I love to be with myself a.k.a Tommy                                                                                                                                            

scala> print(c1.hello)                                                                                                                                                          
Anybody said, Hello!                                                                                                                                                            
()                                                                                                                                                                              

// Note: c1.hello, doesn't return, it is not an expression, and it doesn't have return type, it is procedure
// Note: class and Cat are on 2 lines
// Note: greet and wish methods use 2 differnt ways of string expression
// Note: print method behaviour, it executes first, then prints the return value next. Notice no return value as () for procedure c1.hello



-----------------------------------------------------------------------------------------
5. Classes Vs Case Sensitive
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> class cat {                                                                                                                                                              
     |  var name: String = "Tom"                                                                                                                                                
     |  def greet: String = s"My name is $name"                                                                                                                                 
     |  def hello = println("Hello All")                                                                                                                                        
     |  def bolo = "Hello"                                                                                                                                                      
     | }                                                                                                                                                                        
defined class cat                                                                                                                                                               
                                                                                                                                                                                
scala> cat.hello                                                                                                                                                                
<console>:11: error: not found: value cat                                                                                                                                       
       cat.hello                                                                                                                                                                
       ^                                                                                                                                                                        
scala> var c3 = new Cat                                                                                                                                                         
<console>:11: error: not enough arguments for constructor Cat: (name: String)Cat.                                                                                               
Unspecified value parameter name.                                                                                                                                               
       var c3 = new Cat                                                                                                                                                         
                ^                                                                                                                                                               
                                                                                                                                                                                
scala> var c3 = new cat                                                                                                                                                         
c3: cat = cat@19540247                                                                                                                                                          
                                                                                                                                                                                
scala> c3.name = "Snowbell"                                                                                                                                                     
c3.name: String = Snowbell                                                                                                                                                      

scala> c3.greet                                                                                                                                                                 
res15: String = My name is Snowbell                                                                                                                                             
                                                                                                                                                                                
scala> c3.wish                                                                                                                                                                  
<console>:13: error: value wish is not a member of cat                                                                                                                          
       c3.wish                                                                                                                                                                  
          ^                                                                                                                                                                     
                                                                                                                                                                                
scala> c3.hello                                                                                                                                                                 
Hello All                                                                                                                                                                       
                                                                                                                                                                                
scala> c3.bolo                                                                                                                                                                  
res18: String = Hello                                                                                                                                                           
	   
// Note: cat class must be instantiated to be used
// Note: class name can start with small case, ex: cat, but dont use it
// Note: scala is case sensitive, ex: cat and Cat are 2 different classes
// Note: hello and bolo, one returns value other doesn't
// Note: throws error if member not found, c3.wish
-----------------------------------------------------------------------------------------
6. Classes vs Errors
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> class cat(s:String) { def one = s"Hello dear $s; def two { s"Hello Kitty"} }                                                                                             
<console>:1: error: unclosed string literal                                                                                                                                     
class cat(s:String) { def one = s"Hello dear $s; def two { s"Hello Kitty"} }                                                                                                    
                                                                         ^                                                                                                      
                                                                                                                                                                                
scala> class cat(s:String) { def two { "Hello Kitty" } }                                                                                                                        
<console>:10: warning: a pure expression does nothing in statement position; you may be omitting necessary parentheses                                                          
       class cat(s:String) { def two { "Hello Kitty" } }                                                                                                                        
                                       ^                                                                                                                                        
defined class cat                                                                                                                                                               
                                                                                                                                                                                
scala> var c = new cat("Tom")                                                                                                                                                   
c: cat = cat@c22cf4d                                                                                                                                                            

scala> c.two                                                                                                                                                                    
                                                                                                                                                                                
scala> class cat(s:String){ def one = s"My Kitty Name is $s" }                                                                                                                  
defined class cat                                                                                                                                                               
                                                                                                                                                                                
scala> var c11 = new cat("Tom")                                                                                                                                                 
c11: cat = cat@7a791e8b                                                                                                                                                         
                                                                                                                                                                                
scala> c11.one                                                                                                                                                                  
res20: String = My Kitty Name is Tom                                                                                                                                            
                                                                                                                                                                                
scala> class cat { def two = s"My Kitty" }                                                                                                                                      
defined class cat                                                                                                                                                               

scala> var c12 = new cat("Meow")                                                                                                                                                
<console>:11: error: too many arguments for constructor cat: ()cat                                                                                                              
       var c12 = new cat("Meow")                                                                                                                                                
                 ^                                                                                                                                                              
                                                                                                                                                                                
scala> var c12 = new cat                                                                                                                                                        
c12: cat = cat@25e01756                                                                                                                                                         
                                                                                                                                                                                
scala> cat.two                                                                                                                                                                  
<console>:11: error: not found: value cat                                                                                                                                       
       cat.two                                                                                                                                                                  
       ^                                                                                                                                                                        
                                                                                                                                                                                
scala> c12.two                                                                                                                                                                  
res22: String = My Kitty                                                                                                                                                        

// Note: c.two, doesnt do any thing
// Note: concise string expression doesnt need a param always
// Note: observe the warning of UNIT
-----------------------------------------------------------------------------------------
7. Mixing of different scala data structures
=
-----------------------------------------------------------------------------------------SCALA CONSOLE
scala> class Singer(var name: String)                                                                                                                                           
defined class Singer                                                                                                                                                            
                                                                                                                                                                                
scala> val m = new Singer("miley")                                                                                                                                              
m: Singer = Singer@2246bfd1                                                                                                                                                     
                                                                                                                                                                                
scala> val b = new Singer("bradley")                                                                                                                                            
b: Singer = Singer@17125ea9                                                                                                                                                     
                                                                                                                                                                                
scala> val singers = List(m, b)                                                                                                                                                 
singers: List[Singer] = List(Singer@2246bfd1, Singer@17125ea9)                                                                                                                  
                                                                                                                                                                                
scala> println(singers.map(s=>s.name))                                                                                                                                          
List(miley, bradley)                                                                                                                                                            

scala> println {                                                                                                                                                                
     |  singers.map { (s: Singer) => s.name }                                                                                                                                   
     | }                                                                                                                                                                        
List(miley, bradley)                                                                                                                                                            


// Note: singers objects are there in singers list
// Note: concise style of class declaration
// Note: println {}, can have a code block of execution
// Note: map method in LIST object
// Note: usage of map methods in 2 forms
// Note: noneed to give DATA TYPE for s

-----------------------------------------------------------------------------------------
8. Arguments : mutable, immutable, default, one time
=
-----------------------------------------------------------------------------------------






-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------



























